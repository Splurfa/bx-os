-- Insert all teachers as auth users and create their profiles/teacher records
-- Note: In a real environment, you'd use proper auth signup flows, but for demo purposes we'll insert directly

-- First, let's clean up existing demo data (keeping admin)
DELETE FROM auth.users WHERE email != 'admin@school.edu' AND email != 'sarah.johnson@school.edu';

-- Insert all teachers as auth users
INSERT INTO auth.users (
  id,
  instance_id,
  email,
  encrypted_password,
  email_confirmed_at,
  created_at,
  updated_at,
  raw_user_meta_data,
  role,
  aud
) VALUES 
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'arosen@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Rabbi", "last_name": "Rosen"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'osaadia@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Oranit", "last_name": ""}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'mlitenatsky@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Rabbi", "last_name": "Litenatsky"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'tparnes@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Tehila", "last_name": "Parnes"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'ahamilton@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Arielle", "last_name": "Hamilton"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'fsedaghat@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Sedaghat", "last_name": ""}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'ckatz@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "CMK", "last_name": ""}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'edukatt@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Elizabeth", "last_name": "Dukatt"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'jkatz@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Rabbi", "last_name": "Katz"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'cirons@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Chris", "last_name": "Irons"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'mgould@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Matt", "last_name": "Gould"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'emaestri@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Elizabeth", "last_name": "Maestri"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'ksong@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Kerry", "last_name": "Song"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'jgonzales@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Jared", "last_name": "Gonzales"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'mzajac@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Rabbi", "last_name": "Zajac"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'teinhorn@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Tamar", "last_name": "Einhorn"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'hmikoski@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Howard", "last_name": "Mikoski"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'iturk@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Ilana", "last_name": "Turk"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'nkhadavi@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Nahid", "last_name": "Khadavi"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'hfatolahzack@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Heidi", "last_name": "Fatolahzack"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'mzwecker@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Mark", "last_name": "Zwecker"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'nross@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Nicola", "last_name": "Ross"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'glevi@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Galit", "last_name": "Levi"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'wklatchko@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Wendy", "last_name": "Klatchko"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'aknoll@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Adi", "last_name": "Knoll"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'rkovzelove@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Coach", "last_name": "Ram"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'dgeorge@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Demar", "last_name": "George"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'ogidanian@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Orah", "last_name": "G"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'jnoy@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Jessica", "last_name": "Noy"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'edavis@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Ethan", "last_name": "Davis"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'asokol@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Ariel", "last_name": "Sokol"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'sdurant@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Sid", "last_name": "Durant"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'derekyellin@gmail.com', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Test", "last_name": "Teacher"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'tmiller@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Tamara", "last_name": "Miller"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'cbegan@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Coach", "last_name": "Chumie"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'syashar@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Shaily", "last_name": "Yashar"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'rnahum@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Rachel", "last_name": "Nahum"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'bxsupport@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Substitute", "last_name": "Teacher"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'msinger@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Melony", "last_name": "Singer"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'tskaist@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Tuli", "last_name": "Skaist"}', 'authenticated', 'authenticated'),
  (gen_random_uuid(), '00000000-0000-0000-0000-000000000000', 'dgolan@hillelhebrew.org', crypt('password123', gen_salt('bf')), now(), now(), now(), '{"first_name": "Dalia", "last_name": ""}', 'authenticated', 'authenticated')
ON CONFLICT (email) DO NOTHING;

-- The trigger will automatically create profiles and teacher records for these users

-- Delete existing students to start fresh
DELETE FROM public.students;

-- Now insert all students (they'll be linked to teachers later via the UI)
INSERT INTO public.students (name, grade, teacher_id) VALUES
  ('Asher Abramson', 'TBD', NULL),
  ('Jonathan Corn', 'TBD', NULL),
  ('Aaron Dakar', 'TBD', NULL),
  ('Yosef Dan', 'TBD', NULL),
  ('Idan Dayan', 'TBD', NULL),
  ('Brandon Deutsch', 'TBD', NULL),
  ('Liam Dinets', 'TBD', NULL),
  ('David Farahi', 'TBD', NULL),
  ('Andrew Fried', 'TBD', NULL),
  ('Amiel Geft', 'TBD', NULL),
  ('David Glaser', 'TBD', NULL),
  ('Caleb Hami', 'TBD', NULL),
  ('Yossef Hami', 'TBD', NULL),
  ('Zachary Hami', 'TBD', NULL),
  ('Joshua Kahen', 'TBD', NULL),
  ('Gabriel Lalezary', 'TBD', NULL),
  ('Ethan Louie', 'TBD', NULL),
  ('Devin Nassir', 'TBD', NULL),
  ('Avi Rosen', 'TBD', NULL),
  ('Jacob Rosen', 'TBD', NULL),
  ('Aidan Shaham', 'TBD', NULL),
  ('Nathan Singer', 'TBD', NULL),
  ('Liam Simon', 'TBD', NULL),
  ('Alex Sterling', 'TBD', NULL),
  ('Joseph Subar', 'TBD', NULL),
  ('Jason Zering', 'TBD', NULL),
  ('Ilan Zilberman', 'TBD', NULL),
  ('Kayla Alpert', 'TBD', NULL),
  ('Maddie Archer', 'TBD', NULL),
  ('Maytal Baradarian', 'TBD', NULL),
  ('Sophie Burson', 'TBD', NULL),
  ('Ella Carroll', 'TBD', NULL),
  ('Adella Elghanayan', 'TBD', NULL),
  ('Julia Frankel', 'TBD', NULL),
  ('Eden Friedman', 'TBD', NULL),
  ('Mica Gidenian', 'TBD', NULL),
  ('Phoebe Glick', 'TBD', NULL),
  ('Eliana Golden', 'TBD', NULL),
  ('Koby Goln', 'TBD', NULL),
  ('Sage Heaps', 'TBD', NULL),
  ('Izzy James', 'TBD', NULL),
  ('Haviva Kaplan', 'TBD', NULL),
  ('Samantha Katz', 'TBD', NULL),
  ('Jasmine Kesssan', 'TBD', NULL),
  ('Orly Konvisser', 'TBD', NULL),
  ('Veronica Koretsky', 'TBD', NULL),
  ('Maya Kricolla', 'TBD', NULL),
  ('Perl Litenatsky', 'TBD', NULL),
  ('Rinah Litenatsky', 'TBD', NULL),
  ('Sarah Litenatsky', 'TBD', NULL),
  ('Abbi Lurjeievich', 'TBD', NULL),
  ('Adrienne Monkia', 'TBD', NULL),
  ('Ariella Nazarian', 'TBD', NULL),
  ('Jelena Nielsen', 'TBD', NULL),
  ('Phina Port', 'TBD', NULL),
  ('Elliana Rabin', 'TBD', NULL),
  ('Carly Rosen', 'TBD', NULL),
  ('Eva Rosen', 'TBD', NULL),
  ('Mia Rosen', 'TBD', NULL),
  ('Lielle Saadia', 'TBD', NULL),
  ('Emily Sanders', 'TBD', NULL),
  ('Shayna Sclar', 'TBD', NULL),
  ('Maayan Shani', 'TBD', NULL),
  ('Rebecca Singer', 'TBD', NULL),
  ('Rikki Singer', 'TBD', NULL),
  ('Aviva St. Louiss', 'TBD', NULL),
  ('Elisheva Stone', 'TBD', NULL),
  ('Maya Strelitz', 'TBD', NULL),
  ('Orli Thike', 'TBD', NULL),
  ('Samantha Tolchinsky', 'TBD', NULL),
  ('Sophie Toledano', 'TBD', NULL),
  ('Abby Weinstein', 'TBD', NULL),
  ('Ellie Weinstein', 'TBD', NULL),
  ('Bailey White', 'TBD', NULL),
  ('Talia Whitman', 'TBD', NULL),
  ('Adira Zucker', 'TBD', NULL),
  ('Yael Abramson', 'TBD', NULL),
  ('Lexi Cohen', 'TBD', NULL),
  ('Sienna Driver', 'TBD', NULL),
  ('Tulip Elvis', 'TBD', NULL),
  ('Skye Fatolah-Zack', 'TBD', NULL),
  ('Slone Goldwater', 'TBD', NULL),
  ('Aurelle Hauser', 'TBD', NULL),
  ('Maya Horowitz', 'TBD', NULL),
  ('Maddie Hunter', 'TBD', NULL),
  ('Talia Kalili', 'TBD', NULL),
  ('Sasha Khatibi', 'TBD', NULL),
  ('Alex Klatcko', 'TBD', NULL),
  ('Emma Koth', 'TBD', NULL),
  ('Kayla Koth', 'TBD', NULL),
  ('Bella Kovzelove', 'TBD', NULL),
  ('Ally Lieberth', 'TBD', NULL),
  ('Sydney Lifson', 'TBD', NULL),
  ('Yvonne Louchami', 'TBD', NULL),
  ('Frank Lue', 'TBD', NULL),
  ('Matthew Marks', 'TBD', NULL),
  ('Eldon Martin', 'TBD', NULL),
  ('Boehm Mia', 'TBD', NULL),
  ('Sophie Mock', 'TBD', NULL),
  ('Dominick Napolitano', 'TBD', NULL),
  ('Ramsey Otto', 'TBD', NULL),
  ('Jacob Romanov', 'TBD', NULL),
  ('Rafi Rosenzweig', 'TBD', NULL),
  ('Benjamin Schmitz', 'TBD', NULL),
  ('Brandon Schwartz', 'TBD', NULL),
  ('Samantha .5', 'TBD', NULL),
  ('Zach Singer', 'TBD', NULL),
  ('Ty Tull', 'TBD', NULL),
  ('Sarena Abarbanel', 'TBD', NULL),
  ('Myra Babin Dardik', 'TBD', NULL),
  ('Noah Bertun Cohen', 'TBD', NULL),
  ('Ty Berger', 'TBD', NULL),
  ('Alma Cohen Wolson', 'TBD', NULL),
  ('Ori Dahan', 'TBD', NULL),
  ('Emilee Davis', 'TBD', NULL),
  ('Ezra Davis', 'TBD', NULL),
  ('Jonah Desser', 'TBD', NULL),
  ('Eli Domeyer', 'TBD', NULL),
  ('Eden Eisinger', 'TBD', NULL),
  ('Nessa Elgranayan', 'TBD', NULL),
  ('Eitan Farkash', 'TBD', NULL),
  ('Asher Farone', 'TBD', NULL),
  ('Eve Fine', 'TBD', NULL),
  ('Eli Frank', 'TBD', NULL),
  ('Jonah Frank', 'TBD', NULL),
  ('Quinn Frankel', 'TBD', NULL),
  ('Ronin Franmon', 'TBD', NULL),
  ('Levi Fried', 'TBD', NULL),
  ('Felix Github Zering', 'TBD', NULL),
  ('Anna Gitman', 'TBD', NULL),
  ('Cody Glaser', 'TBD', NULL),
  ('David Goldstein', 'TBD', NULL),
  ('Ella Goman', 'TBD', NULL),
  ('Ortal Handelman', 'TBD', NULL),
  ('Talia Harosh', 'TBD', NULL),
  ('Maya Itzhakov', 'TBD', NULL),
  ('Sarah Kafaei', 'TBD', NULL),
  ('Kayla Khadavi', 'TBD', NULL),
  ('Mia Krich', 'TBD', NULL),
  ('Eliana Lalezary', 'TBD', NULL),
  ('Dina Melamed', 'TBD', NULL),
  ('Kaylene Neman', 'TBD', NULL),
  ('Talia Ronen', 'TBD', NULL),
  ('Olivia West', 'TBD', NULL),
  ('Yehudit Wollheim', 'TBD', NULL),
  ('Esther Zadeh', 'TBD', NULL),
  ('Michelle Zibari', 'TBD', NULL);